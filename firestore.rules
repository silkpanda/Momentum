// firestore.rules

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isHouseholdMember(householdId) {
      return exists(/databases/$(database)/documents/members/$(request.auth.uid)_$(householdId));
    }

    function isHouseholdAdmin(householdId) {
      return get(/databases/$(database)/documents/members/$(request.auth.uid)_$(householdId)).data.role == 'admin';
    }


    // === Users ===
    match /users/{userId} {
      allow create: if request.auth.uid == userId
                      && 'createdAt' in request.resource.data;
      allow get, list: if request.auth != null;
      allow update: if request.auth.uid == userId
                     && !('isAdmin' in request.resource.data);
      allow delete: if false;
    }


    // === Members ===
    match /members/{userId}_{householdId} {
      allow create: if (
                      (request.auth.uid == userId && request.resource.data.role == 'admin')
                      || isHouseholdAdmin(householdId)
                    );
      allow get, list: if isHouseholdMember(householdId);
      allow update, delete: if isHouseholdAdmin(householdId);
    }


    // === Households ===
    match /households/{householdId} {
      allow create: if request.auth != null;
      allow get, list: if isHouseholdMember(householdId);
      allow update: if isHouseholdAdmin(householdId);
      allow delete: if isHouseholdAdmin(householdId);

      // === Tasks (NEW SUBCOLLECTION) ===
      // Supports features TASK-01 through TASK-04
      match /tasks/{taskId} {

        // --- CREATE (TASK-01) ---
        // Only an admin of this household can create new tasks.
        allow create: if isHouseholdAdmin(householdId);

        // --- READ (TASK-02) ---
        // Any member of the household can see all the tasks.
        // The client-side code will handle filtering to "my tasks".
        allow get, list: if isHouseholdMember(householdId);

        // --- UPDATE (TASK-03 & TASK-04) ---
        // This is a two-part rule:
        // 1. (TASK-04) An admin can update any field at any time.
        // 2. (TASK-03) The user *assigned* to the task can update it,
        //    BUT only to change non-critical fields (like 'isComplete').
        //    They cannot change the title, points, or who it's assigned to.
        allow update: if isHouseholdAdmin(householdId) ||
                       (
                         // Check if you are the assigned user...
                         request.auth.uid == resource.data.assignedTo &&
                         // ...and you are NOT changing locked fields.
                         request.resource.data.title == resource.data.title &&
                         request.resource.data.points == resource.data.points &&
                         request.resource.data.assignedTo == resource.data.assignedTo
                       );

        // --- DELETE ---
        // Only an admin of this household can delete a task.
        allow delete: if isHouseholdAdmin(householdId);
      }
    }
  }
}